#!/usr/bin/env node

// Simple CircuitPython REPL script
async function startREPL() {
    // Import the built module
    const circuitPython = await import('./build-standard/circuitpython.mjs');
    
    // Initialize CircuitPython (match api.js settings)
    const cp = await circuitPython.loadCircuitPython({
        heapsize: 128 * 1024,
        stdout: (data) => process.stdout.write(data),
        linebuffer: false
    });
    
    // Initialize REPL
    cp.replInit();
    
    console.log('CircuitPython 10.0.0-beta.2 on webassembly');
    console.log('Type "help()", "copyright()", "credits()" or "license()" for more information.');
    console.log('Use Ctrl+C to exit');
    
    // Set up character-based REPL
    if (process.stdin.isTTY && process.stdin.setRawMode) {
        process.stdin.setRawMode(true);
        process.stdin.resume();
        
        process.stdin.on('data', (data) => {
            for (let i = 0; i < data.length; i++) {
                cp.replProcessCharWithAsyncify(data[i]).then((result) => {
                    if (result) {
                        process.exit(0);
                    }
                });
            }
        });
    } else {
        console.log('Interactive REPL requires a TTY. Try running in a proper terminal.');
        process.exit(1);
    }
}

startREPL().catch(console.error);